// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProiectASP.Data;

#nullable disable

namespace ProiectASP.Migrations
{
    [DbContext(typeof(ApplicationDBContext))]
    partial class ApplicationDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.25")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("AdresaLivrareUser", b =>
                {
                    b.Property<int>("AdreseLivrareID")
                        .HasColumnType("int");

                    b.Property<int>("UsersID")
                        .HasColumnType("int");

                    b.HasKey("AdreseLivrareID", "UsersID");

                    b.HasIndex("UsersID");

                    b.ToTable("AdresaLivrareUser");
                });

            modelBuilder.Entity("ComandaProdus", b =>
                {
                    b.Property<int>("ComenziID")
                        .HasColumnType("int");

                    b.Property<int>("ProduseID")
                        .HasColumnType("int");

                    b.HasKey("ComenziID", "ProduseID");

                    b.HasIndex("ProduseID");

                    b.ToTable("ComandaProdus");
                });

            modelBuilder.Entity("ProiectASP.Models.AdresaLivrare", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("Adresa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Oras")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("AdresaLivrare");
                });

            modelBuilder.Entity("ProiectASP.Models.AppReview", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<DateTime>("DataReview")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descriere")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("AppReview");
                });

            modelBuilder.Entity("ProiectASP.Models.Comanda", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<DateTime>("DataComenzii")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProdusID")
                        .HasColumnType("int");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.Property<int>("pret")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Comanda");
                });

            modelBuilder.Entity("ProiectASP.Models.Produs", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("Descriere")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nume")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Pret")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ID");

                    b.ToTable("Produs");
                });

            modelBuilder.Entity("ProiectASP.Models.User", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<int?>("AppReviewID")
                        .HasColumnType("int");

                    b.Property<int?>("ComandaID")
                        .HasColumnType("int");

                    b.Property<string>("Nume")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("AppReviewID");

                    b.HasIndex("ComandaID");

                    b.ToTable("User");
                });

            modelBuilder.Entity("AdresaLivrareUser", b =>
                {
                    b.HasOne("ProiectASP.Models.AdresaLivrare", null)
                        .WithMany()
                        .HasForeignKey("AdreseLivrareID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProiectASP.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UsersID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ComandaProdus", b =>
                {
                    b.HasOne("ProiectASP.Models.Comanda", null)
                        .WithMany()
                        .HasForeignKey("ComenziID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProiectASP.Models.Produs", null)
                        .WithMany()
                        .HasForeignKey("ProduseID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ProiectASP.Models.User", b =>
                {
                    b.HasOne("ProiectASP.Models.AppReview", null)
                        .WithMany("Users")
                        .HasForeignKey("AppReviewID");

                    b.HasOne("ProiectASP.Models.Comanda", null)
                        .WithMany("Users")
                        .HasForeignKey("ComandaID");
                });

            modelBuilder.Entity("ProiectASP.Models.AppReview", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("ProiectASP.Models.Comanda", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
